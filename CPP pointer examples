//comment and uncomment when needed (ctrl + /)
#include <iostream>
using namespace std;

// // pointer
// int main() {
//     int a = 10;
//     int* ptr = &a; //pointer stores the address of 'a'
//     cout<<ptr;

//     return 0;
// }

// //pointer arithmetic
// int main() {
//     int arr[] = {10, 20, 30};
//     int* ptr = arr;
//     ptr++;
//     cout<<*ptr;
// }

// //dynamic memory allocation
// int main() {
//  int* p = new int(42);
//  delete p;
//  int* arr = new int[5];
//  delete[] arr;
// }

// //pointer to pointer (a pointer can store the address of another pointer)
// int main() {
// int a = 10;
// int* p = &a;
// int** pp = &p;
// cout<<**pp;
// }

// //function pointers
// #include <iostream>
// using namespace std;
// void hello(){cout<<"Hello";}
// int main(){
//     void (*funcPtr)() = hello;
//     funcPtr;
// }

// //null and void pointer
// //null
// int main() {
//     int*ptr = nullptr;
//     cout<<ptr;
// }

// //void
int main(){ 
    void*ptr;
    int a = 5;
    ptr = &a;
    cout<<ptr;
}
